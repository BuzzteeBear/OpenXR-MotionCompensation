<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <DisableFastUpToDateCheck>True</DisableFastUpToDateCheck>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{a772d93d-0e95-4a88-8fe8-a67ab6c57e2b}</ProjectGuid>
    <RootNamespace>XRAPILAYERNOVENDORtemplate</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="PropertySheet.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="PropertySheet.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)\obj\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)\obj\$(Platform)\$(Configuration)\</IntDir>
    <CustomBuildAfterTargets>
    </CustomBuildAfterTargets>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>LAYER_NAMESPACE=motion_compensation_layer;VERSION_NUMBER="$(VersionNumber)";VERSION_STRING="$(VersionString)";_DEBUG;_WINDOWS;_USRDLL;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)framework;$(SolutionDir)\external\OpenXR-SDK\include;$(SolutionDir)\external\OpenXR-SDK\src\common;$(SolutionDir)\external\OpenXR-MixedReality\Shared\XrUtility;$(SolutionDir)\external\OpenXR-MixedReality\shared\ext</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>Default</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;dxgi.lib;dxguid.lib;d3dcompiler.lib;d3d11.lib;d3d12.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>
      </AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>copy $(ProjectDir)\$(ProjectName).json $(OutDir)
copy $(SolutionDir)\scripts\Install-$(SolutionName).ps1 $(OutDir)
copy $(SolutionDir)\scripts\Uninstall-$(SolutionName).ps1 $(OutDir)
copy $(SolutionDir)\configuration\OpenXR-MotionCompensation.ini $(OutDir)</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy dependencies...</Message>
    </PostBuildEvent>
    <PreLinkEvent>
      <Command>
      </Command>
    </PreLinkEvent>
    <PreLinkEvent>
      <Message>
      </Message>
    </PreLinkEvent>
    <PreBuildEvent>
      <Command>python $(ProjectDir)\framework\dispatch_generator.py</Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>Generating layer dispatcher...</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>LAYER_NAMESPACE=motion_compensation_layer;VERSION_NUMBER="$(VersionNumber)";VERSION_STRING="$(VersionString)";DEBUG;_WINDOWS;_USRDLL;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)framework;$(SolutionDir)\external\OpenXR-SDK\include;$(SolutionDir)\external\OpenXR-SDK\src\common;$(SolutionDir)\external\OpenXR-MixedReality\Shared\XrUtility;$(SolutionDir)\external\OpenXR-MixedReality\shared\ext</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>Default</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;dxgi.lib;dxguid.lib;d3dcompiler.lib;d3d11.lib;d3d12.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>
      </AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>echo     Copying dependencies to output folder...
xcopy $(ProjectDir)\$(ProjectName).json $(OutDir) /y /q
xcopy $(SolutionDir)\scripts\Install-$(SolutionName).ps1 $(OutDir) /y /q
xcopy $(SolutionDir)\scripts\Uninstall-$(SolutionName).ps1 $(OutDir) /y /q
xcopy $(SolutionDir)\configuration\OpenXR-MotionCompensation.ini $(OutDir) /y /q</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy dependencies and create release package...</Message>
    </PostBuildEvent>
    <PreLinkEvent>
      <Command>
      </Command>
    </PreLinkEvent>
    <PreLinkEvent>
      <Message>
      </Message>
    </PreLinkEvent>
    <PreBuildEvent>
      <Command>python $(ProjectDir)\framework\dispatch_generator.py</Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>Generating layer dispatcher...</Message>
    </PreBuildEvent>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Message>
      </Message>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="config.h" />
    <ClInclude Include="d3dcommon.h" />
    <ClInclude Include="feedback.h" />
    <ClInclude Include="filter.h" />
    <ClInclude Include="input.h" />
    <ClInclude Include="interfaces.h" />
    <ClInclude Include="overlay.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="shader_utilities.h" />
    <ClInclude Include="utility.h" />
    <ClInclude Include="framework\dispatch.gen.h" />
    <ClInclude Include="framework\dispatch.h" />
    <ClInclude Include="framework\log.h" />
    <ClInclude Include="framework\util.h" />
    <ClInclude Include="tracker.h" />
    <ClInclude Include="layer.h" />
    <ClInclude Include="pch.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="config.cpp" />
    <ClCompile Include="d3d11.cpp" />
    <ClCompile Include="d3d12.cpp" />
    <ClCompile Include="feedback.cpp" />
    <ClCompile Include="filter.cpp" />
    <ClCompile Include="input.cpp" />
    <ClCompile Include="overlay.cpp" />
    <ClCompile Include="utility.cpp" />
    <ClCompile Include="framework\dispatch.cpp" />
    <ClCompile Include="framework\dispatch.gen.cpp" />
    <ClCompile Include="framework\entry.cpp" />
    <ClCompile Include="framework\log.cpp" />
    <ClCompile Include="layer.cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="tracker.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="framework\dispatch_generator.py" />
    <None Include="framework\layer_apis.py" />
    <None Include="packages.config" />
    <None Include="XR_APILAYER_NOVENDOR_motion_compensation.json">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</DeploymentContent>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="Sounds.rc">
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\sounds;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\sounds;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemGroup>
  <ItemGroup>
    <Media Include="sounds\0.wav" />
    <Media Include="sounds\1.wav" />
    <Media Include="sounds\10.wav" />
    <Media Include="sounds\2.wav" />
    <Media Include="sounds\3.wav" />
    <Media Include="sounds\4.wav" />
    <Media Include="sounds\5.wav" />
    <Media Include="sounds\6.wav" />
    <Media Include="sounds\7.wav" />
    <Media Include="sounds\8.wav" />
    <Media Include="sounds\9.wav" />
    <Media Include="sounds\activated.wav" />
    <Media Include="sounds\back.wav" />
    <Media Include="sounds\calibrated.wav" />
    <Media Include="sounds\connection_lost.wav" />
    <Media Include="sounds\deactivated.wav" />
    <Media Include="sounds\debug_off.wav" />
    <Media Include="sounds\debug_on.wav" />
    <Media Include="sounds\down.wav" />
    <Media Include="sounds\error.wav" />
    <Media Include="sounds\eye_cached.wav" />
    <Media Include="sounds\eye_calculation.wav" />
    <Media Include="sounds\forward.wav" />
    <Media Include="sounds\left.wav" />
    <Media Include="sounds\loaded.wav" />
    <Media Include="sounds\max.wav" />
    <Media Include="sounds\min.wav" />
    <Media Include="sounds\minus.wav" />
    <Media Include="sounds\overlay_off.wav" />
    <Media Include="sounds\overlay_on.wav" />
    <Media Include="sounds\plus.wav" />
    <Media Include="sounds\point.wav" />
    <Media Include="sounds\right.wav" />
    <Media Include="sounds\rot_left.wav" />
    <Media Include="sounds\rot_right.wav" />
    <Media Include="sounds\saved.wav" />
    <Media Include="sounds\up.wav" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\packages\fmt.7.0.1\build\fmt.targets" Condition="Exists('..\packages\fmt.7.0.1\build\fmt.targets')" />
    <Import Project="..\packages\Microsoft.Windows.ImplementationLibrary.1.0.220201.1\build\native\Microsoft.Windows.ImplementationLibrary.targets" Condition="Exists('..\packages\Microsoft.Windows.ImplementationLibrary.1.0.220201.1\build\native\Microsoft.Windows.ImplementationLibrary.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\fmt.7.0.1\build\fmt.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\fmt.7.0.1\build\fmt.targets'))" />
    <Error Condition="!Exists('..\packages\Microsoft.Windows.ImplementationLibrary.1.0.220201.1\build\native\Microsoft.Windows.ImplementationLibrary.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Windows.ImplementationLibrary.1.0.220201.1\build\native\Microsoft.Windows.ImplementationLibrary.targets'))" />
  </Target>
</Project>