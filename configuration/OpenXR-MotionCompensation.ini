[startup]
; set to 0: disable motion compensation globally 
enabled = 1
; set to 0: disable motion controller / vive tracker
physical_enabled = 1
; set to 0: disable initialization of graphical overlay
overlay_enabled = 1
; set to 1 to initialize physical tracker asap (e.g. to avoid conflict with eye tracking in oxrtk for games without support for motion controllers)
physical_early_init = 0 
; activate motion compensation on application startup
auto_activate = 0
; delay for auto activation, set to -1: disable delay 
auto_activate_delay = 10
; set to 0: disable audible countdown before auto activation (recommended when use_cor pos = 1)
auto_activate_countdown = 1
; compensate motion controllers alongside hmd position
compensate_controllers = 0

[tracker]
; supported modes: controller, vive, yaw, srs and flypt 
type = controller
; valid options: 
; for controller: left. right
; for vive (with * = right, left): *_foot, *_shoulder, *_elbow, *_knee, waist, chest, camera, keyboard 
side = left
; offset for center of rotation (cor) of motion rig in relation to hmd position
; used for virtual tracker position (yaw, srs, flypt) values in cm
; oriented in relation to hmd's forward direction (gravity-aligned)
; positive yaw angle value (in degrees) is rotating the forward vector to the left (counterclockwise), after positioning
offset_forward = 0.0
offset_down = 0.0
offset_right = 0.0
offset_yaw_angle = 0.0
; load saved cor pose instead of recalibration with headset + offset
load_ref_pose_from_file = 0
; overlay marker size (in cm)
marker_size = 10.0
; use values from yaw vr game engine for cor offset 
use_yaw_ge_offset = 0
; compensate for a constant offset (in degrees) on the pitch axis in virtual tracker input data
constant_pitch_angle = 0.0
; recovery time before deactivation after tracker connection loss, in seconds, 0.0 = deactivated 
connection_timeout = 3.0
; interval to check virtual tracker connection, in seconds , 0.0 = deactivated 
connection_check = 1.0
; apply motion compensation using xrLocateSpace (default method in version < 0.3.0)
legacy_mode	= 0

; KEYS STARTING WITH cor_ ARE NOT SUITED FOR MANUAL MODIFICATION!
; saved cor position for native OpenXR
cor_x = 0.0
cor_y = 0.0
cor_z = 0.0
cor_a = 0.0
cor_b = 0.0
cor_c = 0.0
cor_d = 0.0
; saved cor position for OpenComposite
cor_x_oc = 0.0
cor_y_oc = 0.0
cor_z_oc = 0.0
cor_a_oc = 0.0
cor_b_oc = 0.0
cor_c_oc = 0.0
cor_d_oc = 0.0

[translation_filter]
; value between 0.0 (filter off) and 1.0 (initial location is never changed), higher value increases smoothing and latency
strength = 0.50
; single (1), double (2) or triple (3) exponential moving average filter
order = 2
; factor for modifying filtering in vertical direction (>= 0.0)
vertical_factor = 1.0

[rotation_filter]
; value between 0.0 (filter off) and 1.0 (initial rotation is never changed), higher value increases smoothing and latency
strength = 0.50
; single (1), double (2) or triple (3) slerp filter
order = 2

[input_stabilizer]
; instead of reading only the current input value of a virtual tracker, the input data is continuously sampled at ~600Hz
; and a butterworth/biquad low pass filter is applied before translational/rotational filter stage
enabled = 0
; value between 0.0 (filtering off) and 1.0 (only zeros), higher value increases smoothing and latency
strength = 0.5
; factors (> 0) to modify filter strength for individual dof(s)
roll = 1.0
pitch = 1.0
yaw = 1.0
surge = 1.0
sway = 1.0
heave = 1.0

[pose_modifier]
; factors for pose modifier to increase/decrease compensation effect for defined axis/direction
; orientation is gravity aligned and based on:
;	- hmd position on calibration for physical tracker (controller, vive)
;	- current reference pose for virtual tracker (srs, flypt, yaw)
; respective factors are applied on tracker first and afterwards on hmd, their effects are stacking

; enable modification of motion compensation pose 
enabled = 0
; modify rotational compensation at tracker position
tracker_roll = 1.0
tracker_pitch = 1.0
tracker_yaw = 1.0
; modify translational compensation at tracker position
tracker_surge = 1.0
tracker_sway = 1.0
tracker_heave = 1.0
; modify rotational compensation at hmd position
hmd_roll = 1.0
hmd_pitch = 1.0
hmd_yaw = 1.0
; modify translational compensation at hmd position
hmd_surge = 1.0
hmd_sway = 1.0
hmd_heave = 1.0

[cache]
; use cached eye poses instead of calculated ones
use_eye_cache = 0
; tolerance for cache used for pose reconstruction on frame submission, in ms 
tolerance = 500.0

[shortcuts]
; see user guide for valid key descriptors

; GENERAL
; (re)activate and deactivate motion compensation
activate = CTRL+INS
; calibrate neutral pose for reference tracker
calibrate = CTRL+DEL

; FILTER
; increase / decrease filter strength
translation_increase = CTRL+PLUS
translation_decrease = CTRL+MINUS
rotation_increase = CTRL+0
rotation_decrease = CTRL+9

; STABILIZER
toggle_stabilizer = CTRL+BACKSLASH
stabilizer_increase = CTRL+CLOSEBRACKET
stabilizer_decrease = CTRL+OPENBRACKET

; VIRTUAL TRACKER
; modify offset values for virtual tracker (by 1 cm)
offset_forward = CTRL+UP
offset_back = CTRL+DOWN
offset_up = CTRL+PGUP
offset_down = CTRL+PGDN
offset_right = CTRL+RIGHT
offset_left = CTRL+LEFT
; modify rig orientation on yaw axis (by 1 arc degree)
rotate_right = CTRL+PERIOD
rotate_left = CTRL+COMMA
; toggle overlay display on/off
toggle_overlay = CTRL+D
; toggle overlay passthrough mode on/off
toggle_overlay_passthrough = CTRL+SHIFT+D
; toggle between eye cache and calculation
toggle_cache = CTRL+E
; toggle pose modifier on/off
toggle_pose_modifier = CTRL+P

; additional modifier(s) for faster filter (x5), stabillzer (x5), and cor position (x10) manipulation 
fast_modifier = ALT

; CONFIG
; write filter strength and cor offset into global config file
save_config = CTRL+SHIFT+S
; write filter strength and cor offset into application specific config file
save_config_app = CTRL+SHIFT+A
; reload configuration from file(s)
reload_config = CTRL+SHIFT+L

; DEBUG
; enable/disable verbose logging (includes per frame outputs, so log file size and performance impact may increase significantly)
toggle_verbose_logging = CTRL+SHIFT+SEMICOLON
; enable/disable writing of tracker telemetry into .CSV file
toggle_recording = CTRL+SHIFT+PERIOD
; log current tracker position(s)
log_tracker_pose = CTRL+SHIFT+T
; log current interaction profile (physical tracker)
log_interaction_profile = CTRL+SHIFT+I

[debug]
; write debug level log entries
log_verbose = 0
; record sampled values (if input stabilizer is active)
record_stabilizer_samples = 0
; test motion compensation without tracker input = rotate on yaw axis (0/1)
testrotation = 0