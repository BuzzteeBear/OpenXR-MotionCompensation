<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>